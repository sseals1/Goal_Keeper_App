[{"/Users/macbook/workspace/Goal_Keeper_App/src/index.js":"1","/Users/macbook/workspace/Goal_Keeper_App/src/reportWebVitals.js":"2","/Users/macbook/workspace/Goal_Keeper_App/src/components/ApplicationViews.js":"3","/Users/macbook/workspace/Goal_Keeper_App/src/components/nav/NavBar.js":"4","/Users/macbook/workspace/Goal_Keeper_App/src/components/auth/Login.js":"5","/Users/macbook/workspace/Goal_Keeper_App/src/components/auth/Register.js":"6","/Users/macbook/workspace/Goal_Keeper_App/src/components/ApiManager.js":"7","/Users/macbook/workspace/Goal_Keeper_App/src/components/nav/NavigationBar.js":"8","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalForm/GoalForm.js":"9","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalForm/MyGoals.js":"10","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalist/GoalList.js":"11","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/home/Home.js":"12","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/milestone/GoalMilestone.js":"13","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/suggestions/Tips.js":"14","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/milestone/MileFilled.js":"15","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/filteredGoals/FilterByWeek.js":"16","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/filteredGoals/FilterByMonth.js":"17","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/review/YearInReview.js":"18","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/notes/GoalNotes.js":"19","/Users/macbook/workspace/Goal_Keeper_App/src/components/Goalify.js":"20"},{"size":624,"mtime":1654535660871,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1653935298404,"results":"23","hashOfConfig":"22"},{"size":1703,"mtime":1654535445746,"results":"24","hashOfConfig":"22"},{"size":1143,"mtime":1653935298402,"results":"25","hashOfConfig":"22"},{"size":2225,"mtime":1655856615595,"results":"26","hashOfConfig":"22"},{"size":3038,"mtime":1653935298402,"results":"27","hashOfConfig":"22"},{"size":1550,"mtime":1655321664053,"results":"28","hashOfConfig":"22"},{"size":2566,"mtime":1654525173382,"results":"29","hashOfConfig":"22"},{"size":9356,"mtime":1655322738356,"results":"30","hashOfConfig":"22"},{"size":364,"mtime":1654218571565,"results":"31","hashOfConfig":"22"},{"size":4798,"mtime":1655862776660,"results":"32","hashOfConfig":"22"},{"size":804,"mtime":1654032870623,"results":"33","hashOfConfig":"22"},{"size":6826,"mtime":1655777380115,"results":"34","hashOfConfig":"22"},{"size":745,"mtime":1654033742342,"results":"35","hashOfConfig":"22"},{"size":888,"mtime":1655773369540,"results":"36","hashOfConfig":"22"},{"size":1281,"mtime":1654098779189,"results":"37","hashOfConfig":"22"},{"size":1369,"mtime":1654098900495,"results":"38","hashOfConfig":"22"},{"size":7675,"mtime":1655855196261,"results":"39","hashOfConfig":"22"},{"size":2029,"mtime":1654130596339,"results":"40","hashOfConfig":"22"},{"size":883,"mtime":1654535628083,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"fggh9r",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"85"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/workspace/Goal_Keeper_App/src/index.js",[],[],[],"/Users/macbook/workspace/Goal_Keeper_App/src/reportWebVitals.js",[],[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/ApplicationViews.js",["116","117"],[],"import React, { useState } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { GoalForm } from \"./views/goalForm/GoalForm\";\nimport { MyGoals } from \"./views/goalForm/MyGoals\";\nimport { Goal, MileFilled } from \"./views/milestone/MileFilled\"\nimport { GoalList } from \"./views/goalist/GoalList\";\nimport { GoalMilestone } from \"./views/milestone/GoalMilestone\"\nimport { Home } from \"./views/home/Home\";\nimport { Tips } from \"./views/suggestions/Tips\"\nimport { YearInReview } from \"./views/review/YearInReview\"\nimport { FilterByWeek } from \"./views/filteredGoals/FilterByWeek\"\nimport { FilterByMonth } from \"./views/filteredGoals/FilterByMonth\"\nimport { GoalNotes } from \"./views/notes/GoalNotes\"\n\nexport const ApplicationViews = () => {\n  return (\n    <>\n      <Route exact path=\"/goals\">\n        <GoalList />\n      </Route>\n\n      <Route exact path=\"/goalform\">\n        <GoalForm />\n      </Route>\n\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <Route exact path=\"/home\">\n        <Home />\n      </Route>\n\n      <Route exact path=\"/review\">\n       <YearInReview />\n      </Route>\n\n      <Route exact path=\"/mygoals\">\n        <MyGoals />\n      </Route>\n\n      <Route path=\"/goals/:goalsId(\\d+)\">\n        <GoalMilestone />\n      </Route>\n\n      <Route path=\"/tips/:tipsId(\\d+)\">\n        <Tips />\n      </Route>\n\n      <Route exact path=\"/milefilled\">\n        <MileFilled />\n      </Route>\n\n      <Route exact path=\"/filterbyweek\">\n        <FilterByWeek />\n      </Route>\n\n      <Route exact path=\"/filterbymonth\">\n        <FilterByMonth />\n      </Route>\n      \n      <Route exact path=\"/goalnotes/:goalsId(\\d+)\">\n        <GoalNotes />\n      </Route>\n      \n    </>\n  );\n};\n","/Users/macbook/workspace/Goal_Keeper_App/src/components/nav/NavBar.js",["118"],[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/auth/Login.js",[],[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/auth/Register.js",[],[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/ApiManager.js",["119"],[],"import React, {} from \"react\"\n\nexport const ListOfGoals = () => {\n    return fetch(`http://localhost:8088/goals?_expand=category&_expand=priority&_expand=term`)\n            .then(res => res.json())\n}\nexport const GetAllGoals = () => {\n    return fetch(`http://localhost:8088/goals`)\n    .then(res => res.json())\n}\nexport const GoalCategory = () => {\n    return fetch(`http://localhost:8088/categories`)\n    .then(res => res.json())\n}\n \nexport const GoalPriority = () => {\n  return fetch(`http://localhost:8088/priorities`)\n  .then(res => res.json())\n}\n\nexport const TimeFrame = () => {\n    return fetch(`http://localhost:8088/terms`)\n    .then(res => res.json())\n}\n\nexport const GoalTips = () => {\n    return fetch(`http://localhost:8088/tips`)\n    .then(res => res.json())\n}\n\nexport const Review = () => {\n    return fetch(`http://localhost:8088/reviews`)\n    .then(res => res.json())\n}\n\nexport const GetGoal = (goalsId) => {\n    return fetch(`http://localhost:8088/goals/${goalsId}`)\n        .then(res => res.json())\n}\n\nexport const getTips = (tipsId) => {\n    return fetch(`http://localhost:8088/tips/${tipsId}`)\n    .then(res => res.json())\n}\n\nexport const getCategories = () => {\n    return fetch(`http://localhost:8088/categories`)\n    .then(res => res.json())\n}\n\nexport const getMilestones = () => {\n    return fetch(`http://localhost:8088/milestones?_expand=goal`)\n    .then(res => res.json())\n}\nexport const getFilledMilestones = (goalsId) => {\n    return fetch(`http://localhost:8088/milestones/${goalsId}`)\n    .then(res => res.json())\n}\n ",[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/nav/NavigationBar.js",["120","121","122","123","124","125"],[],"import React, { useEffect, useState } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  NavDropdown,\n  Container,\n  Form,\n  FormControl,\n  button,\n} from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getTips, GoalTips } from \"../ApiManager\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nexport const NavigationBar = () => {\n  const [suggestions, setSuggestions] = useState([]);\n\n  useEffect(() => {\n    GoalTips().then((data) => {\n      setSuggestions(data);\n    });\n  }, []);\n\n  return (\n    <>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"primary\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"/home\">Goalify</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"/goalform\">Create A Goal</Nav.Link>\n              <Nav.Link href=\"/mygoals\">My Goals</Nav.Link>\n              <Nav.Link href=\"/review\">Year In Review</Nav.Link>\n              <NavDropdown\n                title=\"Goalsetting Tips\"\n                id=\"collasible-nav-dropdown\"\n              >\n                {suggestions.map((data) => {\n                  return (\n                    <NavDropdown.Item key={data.id} href={`/tips/${data.id}`}>\n                      {data.suggestion}\n                    </NavDropdown.Item>\n                  );\n                })}\n                {/* <NavDropdown.Item href=\"#action/3.1\">\n                  Action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item> */}\n              </NavDropdown>\n            </Nav>\n            <Nav>\n              {/* <Link to=\"#\" \n                onClick={\n                    () => {\n                        localStorage.removeItem(\"goal_keeper\")\n                        }\n                    }>\n                    Logout\n                </Link> */}\n\n              <Nav.Link\n                onClick={() => {\n                  localStorage.removeItem(\"goal_keeper\");\n                }}\n                href=\"/login\"\n              >\n                Logout\n              </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n};\n","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalForm/GoalForm.js",["126","127","128","129","130"],[],"// import { getByLabelText } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoalCategory, GoalPriority, TimeFrame } from \"../../ApiManager\";\nimport \"./GoalForm.css\";\n\nexport const GoalForm = () => {\n  const history = useHistory();\n  const [goalDescription, setGoalDescription] = useState(\"\");\n  const [goalObjective, setGoalObjective] = useState(\"\");\n  const [goalNotes, setGoalNotes] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [goalDate, setGoalDate] = useState(\"\");\n  const [newGoal, setGoals] = useState({});\n\n  const [categoryId, setGoalCategory] = useState(\"\");\n  //   goalCategory is the key on the new object that is being created coming from the event.target.value\n  const [category, setCategory] = useState([]);\n  //   setCategory is setting state for the useEffect (bringing in categories)\n  // category is table in the the db\n\n  const [priorityId, setGoalPriority] = useState(\"\");\n  const [priority, setPriority] = useState([]);\n\n  const [termId, setGoalTimeFrame] = useState(\"\");\n  const [timeFrame, setTimeFrame] = useState([]);\n\n  const [notes, setNotes] = useState(\"\");\n\n  const submitGoal = (captureEventToPreventDefaultBehavior) => {\n    // This parameter \"captureEventToPreventDefault\" stops the default behavior of the\n    // browser which in this case is to Submit the goal. By preventing the default browser behavior\n    // the browser will display the other html.\n    captureEventToPreventDefaultBehavior.preventDefault();\n    // getting the userId value from localStorage\n\n    const goalObj = {\n      // the goal object being updated with values from the state variable \"goal\"\n      goalDescription,\n      goalObjective,\n      goalNotes,\n      goalDate,\n      userId: parseInt(localStorage.getItem(\"goal_keeper\")),\n      categoryId,\n      priorityId,\n      termId,\n      notes,\n\n      // dot notation to create the value pairs on the new object keys\n    };\n\n    setGoals(goalObj);\n\n    const fetchOption = {\n      // POST fetch call to send the new object to the API\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(goalObj),\n      // the body of the fetch object has to be converted to JSON string\n    };\n    // console.log(goalObj);\n    return (\n      fetch(\"http://localhost:8088/goals\", fetchOption)\n        // the fetchOption object is being sent to the url in the return fetch\n        .then(() => {\n          history.push(\"/mygoals\");\n          // Once the object is sent to the API, the user is then\n          // pushed/routed back to the /goals route that is\n          // specified as goalList in the ApplicationViews component\n        })\n    );\n  };\n\n  const formChecker = (newGoalObj) => {\n    // const toggleButton = (newGoal) => {\n    const isEnabled =\n      goalDescription.length > 0 &&\n      goalObjective.length > 0 &&\n      goalNotes.length > 0 &&\n      goalDate.length > 0;\n\n    // const booleanCheck = isEnabled\n    // if (booleanCheck){\n    //   return submitGoal(booleanCheck)\n    // } else {\n    //   submitGoal(alert(\"test\"))\n    // }\n\n    return (\n      <div className=\"btn-shift-right\">\n        <button\n          disabled={!isEnabled}\n          className=\"track_goal-btn\"\n          // onFocus={alert(\"test\")}\n          onClick={submitGoal}\n        >\n          TRACK GOAL\n        </button>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    GoalCategory()\n    .then((data) => {\n      setCategory(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    GoalPriority()\n    .then((data) => [setPriority(data)]);\n  }, []);\n\n  useEffect(() => {\n    TimeFrame()\n    .then((data) => {\n      setTimeFrame(data);\n    });\n  }, []);\n\n  \n  return (\n      <Container className=\"container\">\n    <form className=\"goalForm\">\n      <h4 className=\"goalForm__title\">New Goal</h4>\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Enter a new goal to start:</label>\n            <input\n              // The input tag holds all of the logic for capturing the\n              // user input for the description field\n              required\n              autoFocus\n              type=\"textarea\"\n              // The code that tells what the form field will be (type=\"text\")\n              className=\"form-control\"\n              placeholder=\"Brief description of your goal\"\n              // The onChange event listener is used to capture the user input from the DOM\n              onChange={(event) => {\n                setGoalDescription(event.target.value);\n              }}\n            />\n          </div>\n        </fieldset>\n      {/* </Container> */}\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Goal Objectives:</label>\n            <input\n              required\n              autoFocus\n              type=\"textarea\"\n              className=\"form-control\"\n              placeholder=\"Brief description of goal objectives\"\n              onChange={(event) => {\n                setGoalObjective(event.target.value);\n              }}\n            />\n          </div>\n        </fieldset>\n      {/* // </Container> */}\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Goal Notes:</label>\n            <input\n              required\n              autoFocus\n              type=\"textarea\"\n              className=\"form-control\"\n              placeholder=\"Enter goal progress observations\"\n              onChange={(event) => {\n                setGoalNotes(event.target.value);\n              }}\n            />\n          </div>\n        </fieldset>\n       {/* </Container> */}\n      {/* <Container> */}\n      <fieldset>\n        {/* <div className=\"form-date\"> */}\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Projected Completion Date:</label>\n          <input\n            required\n            autoFocus\n            type=\"date\"\n            className=\"form-control\"\n            placeholder=\"\"\n            onChange={(event) => {\n              setGoalDate(event.target.value);\n            }}\n          />\n        </div>\n      </fieldset>\n      {/* </Container> */}\n      <h6 className=\"goal-title\">Select your goal options</h6>\n      {/* <Container> */}\n        <fieldset>\n          {/* <div className=\"drop-title\">Select your goal options</div> */}\n          <div className=\"form-group\">\n            {/* <div className=\"dropdown-group\"> */}\n            <label htmlFor=\"name\">Category:</label>\n            <select\n              onChange={(event) => {\n                // select.options[select.selectedIndex].value;\n                // if ([event.target.selectedIndex] === event.categories. );\n                setGoalCategory(parseInt([event.target.selectedIndex]));\n              }}\n            >\n              <option className=\"option-font\" value=\"0\" key=\"category\">\n                Select a category...\n              </option>\n              {category.map((catObj) => {\n                return (\n                  <option className=\"opdrop\" key={catObj.id}>\n                    {catObj.category}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </fieldset>\n       {/* </Container> */}\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            {/* <div className=\"dropdown-group\"> */}\n            <label htmlFor=\"name\">Priority level: </label>\n            <select\n              onChange={(event) => {\n                setGoalPriority(parseInt([event.target.selectedIndex]));\n              }}\n            >\n              <option className=\"option-font\" value=\"0\" key=\"priority\">\n                Select a priority...\n              </option>\n\n              {priority.map((priorityObj) => {\n                return (\n                  <option className=\"opdrop\" key={priorityObj.id}>\n                    {priorityObj.priority}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </fieldset>\n      {/* </Container> */}\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            {/* <div className=\"dropdown-group\"> */}\n            <label htmlFor=\"name\">Goal term: </label>\n            <select\n              onChange={(event) => {\n                setGoalTimeFrame(parseInt([event.target.selectedIndex]));\n              }}\n            >\n              <option className=\"option-font\" value=\"0\" key=\"location\">\n                Select a term...\n              </option>\n\n              {timeFrame.map((data) => {\n                return (\n                  <option className=\"opdrop\" key={data.id}>\n                    {data.term}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </fieldset>\n      {/* </Container> */}\n      <div className=\"form-group\">\n        {/* <div className=\"form-group\"> */}\n        {formChecker(newGoal)}\n        {/* {toggleButton(newGoal)} */}\n        {/* invoking the function responsible for disableing the submit button untill all \n        form boxes have been filled.\n        */}\n      </div>\n    </form>\n    </Container>\n  );\n};\n","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalForm/MyGoals.js",["131","132"],[],"import React, { useEffect, useState } from \"react\";\n// import { ListOfGoals } from '../../ApiManager'\nimport { GoalList } from \"../goalist/GoalList\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport const MyGoals = () => {\n  return (\n    <Container>\n      <Row>\n        <Col>\n        {GoalList()}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalist/GoalList.js",[],[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/views/home/Home.js",[],[],[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/views/milestone/GoalMilestone.js",["133","134","135"],[],"import { getSpaceUntilMaxLength } from \"@testing-library/user-event/dist/utils\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { GetGoal, getMilestones } from \"../../ApiManager\";\nimport \"./GoalMilestone.css\";\n\nexport const GoalMilestone = () => {\n  const history = useHistory();\n  const { goalsId } = useParams();\n  const [goal, setGoal] = useState(\"\");\n  const [direction, setDirection] = useState({});\n  const [defined, setDefined] = useState({});\n  const [progress, setProgress] = useState({});\n  const [features, setFeatures] = useState({});\n  const [attained, setAttained] = useState({});\n  const [notes, setNotes] = useState({});\n  const [milestone, setMilestone] = useState([]);\n\n  const milestoneChecker = milestone.find((mileObj) => {\n    return (\n      mileObj.userId === parseInt(localStorage.getItem(\"goal_keeper\")) &&\n      mileObj.goalId === parseInt(goalsId)\n    );\n  });\n\n\n\n  const saveMilestone = () => {\n    \n    const newMilestoneObject = {\n      direction: direction,\n      defined: defined,\n      progress: progress,\n      features: features,\n      attained: attained,\n      notes: notes,\n      userId: parseInt(localStorage.getItem(\"goal_keeper\")),\n      goalId: goal.id,\n    };\n\n    if (milestoneChecker) {\n      fetch(`http://localhost:8088/milestones/${milestoneChecker.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newMilestoneObject),\n      })\n      .then(() => {\n      history.push(\"/mygoals\");\n      });\n    } else {\n      const fetchObject = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newMilestoneObject),\n      };\n      return fetch(`http://localhost:8088/milestones`, fetchObject).then(() => {\n        history.push(\"/mygoals\");\n      });\n    \n  };}\n\n  useEffect(() => {\n    GetGoal(parseInt(goalsId)).then((data) => {\n      setGoal(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    getMilestones()\n    .then((data) => {\n      setMilestone(data);\n    });\n  }, []);\n\n\n  useEffect(() => {\n      if (milestoneChecker) {\n        setDirection(milestoneChecker.direction)\n        setDefined(milestoneChecker.defined)\n        setProgress(milestoneChecker.progress)\n        setFeatures(milestoneChecker.features)\n        setAttained(milestoneChecker.attained)\n        setNotes(milestoneChecker.notes)\n      }\n  \n  },[milestone])\n\n\n\n  return (\n    <>\n      <Container className=\"container\">\n        <h3 className=\"milestone-rev\">Milstone Review</h3>\n        <Container>\n          <fieldset>\n            <div className=\"form-group\">\n              <input\n                className=\"dirbx\"\n                type=\"checkbox\"\n                label=\"My Value\"\n                checked={direction}\n                onChange={(event) => {\n                  setDirection(event.target.checked);\n                }}\n              />\n\n              <Row>\n                <Col>\n                  <label className=\"title\" htmlFor=\"name\">\n                    Overall Direction\n                  </label>\n                </Col>\n              </Row>\n            </div>\n          </fieldset>\n        </Container>\n        <Container>\n          <fieldset>\n            <div className=\"form-group\">\n              <input\n                className=\"defbx\"\n                type=\"checkbox\"\n                label=\"My Value\"\n                checked={defined}\n                onChange={(event) => {\n                  setDefined(event.target.checked);\n                }}\n              />\n\n              <Row>\n                <Col>\n                  <label className=\"title\" htmlFor=\"name\">\n                    Flushed And Defined\n                  </label>\n                </Col>\n              </Row>\n            </div>\n          </fieldset>\n        </Container>\n        <Container>\n          <fieldset>\n            <div className=\"form-group\">\n              <input\n                className=\"featbx\"\n                type=\"checkbox\"\n                label=\"My Value\"\n                checked={progress}\n                onChange={(event) => {\n                  setProgress(event.target.checked);\n                }}\n              />\n\n              <Row>\n                <Col>\n                  <label className=\"title\" htmlFor=\"name\">\n                    Tangible Progress Made\n                  </label>\n                </Col>\n              </Row>\n            </div>\n          </fieldset>\n        </Container>\n        <Container>\n          <fieldset>\n            <div className=\"form-group\">\n              <input\n                className=\"featbx\"\n                type=\"checkbox\"\n                label=\"My Value\"\n                checked={features}\n                onChange={(event) => {\n                  setFeatures(event.target.checked);\n                }}\n              />\n\n              <Row>\n                <Col>\n                  <label className=\"title\" htmlFor=\"name\">\n                    Features Completed\n                  </label>\n                </Col>\n              </Row>\n            </div>\n          </fieldset>\n        </Container>\n        <Container>\n          <fieldset>\n            <div className=\"form-group\">\n              <input\n                className=\"attbx\"\n                type=\"checkbox\"\n                transform=\"scale(4)\"\n                label=\"My Value\"\n                checked={attained}\n                onChange={(event) => {\n                  setAttained(event.target.checked);\n                }}\n              />\n\n              <Row>\n                <Col>\n                  <label className=\"title\" htmlFor=\"name\">\n                    Goal Objective Attained\n                  </label>\n                </Col>\n              </Row>\n            </div>\n          </fieldset>\n        </Container>\n        <Container>\n          <fieldset>\n            <div className=\"form-group\">\n              <Row>\n                <Col>\n                  <label className=\"title\" htmlFor=\"name\">\n                    Notes\n                  </label>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n              <textarea\n                value={notes}\n                className=\"textarea\"\n                placeholder=\"Enter milestone notes here...\"\n                onChange={(event) => {\n                  setNotes(event.target.value);\n                }}\n              ></textarea>\n               </Col>\n              </Row>\n            </div>\n          </fieldset>\n        </Container>\n\n        <button\n          key={\"save-btn\"}\n          className=\"saveMilestone-btn\"\n          onClick={saveMilestone}\n        >\n          Save\n        </button>\n      </Container>\n    </>\n  );\n};\n",[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/views/suggestions/Tips.js",["136"],[],"import React, { useEffect, useState } from \"react\";\nimport { getTips } from \"../../ApiManager\";\nimport { useParams } from \"react-router-dom\";\nimport { Container, Row, Col} from \"react-bootstrap\"\nimport \"./Tips.css\"\n\nexport const Tips = () => {\n  const [tips, setTips] = useState({});\n  const { tipsId } = useParams();\n\n  useEffect(() => {\n    getTips(tipsId)\n    .then((data) => {\n      setTips(data);\n      console.log(data)\n    });\n  },[]);\n\n  return (\n\n    <Container>\n      <Row>\n        <h4 className=\"h4\">{tips.suggestion}</h4>\n      </Row>\n      <div className=\"tips\">\n      <Row>\n        <Col xs={5}>{tips.tip}</Col>\n      </Row>\n        <label htmlFor=\"name\"></label>\n       \n         \n        \n      </div>\n      </Container>\n\n  );\n};\n","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/milestone/MileFilled.js",["137","138","139","140","141","142"],[],"import React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getFilledMilestones, GetGoal, getMilestones } from \"../../ApiManager\";\n\nexport const MileFilled = () => {\n  const { goalsId } = useParams();\n  const [goal, setGoal] = useState({});\n  const [milestone, setMilestone] = useState({});\n  const history = useHistory();\n\n  console.log(milestone);\n\n  useEffect(() => {\n    getFilledMilestones(goalsId)\n    .then((data) => {\n      setMilestone(data)\n    })\n  },[])\n\n  \n  // useEffect(() => {\n    //   getMilestones().then((data) => {\n      //     setMilestone(data);\n      //   });\n      // },[]);\n      \n      return (\n        <>\n      <h1>This text</h1>\n      \n\n        {\n\n        milestone.find((mileObj) => {\n          return (\n            mileObj.id === goalsId\n          );\n        })\n\n        }\n\n        \n    </>\n  );\n};\n","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/filteredGoals/FilterByWeek.js",["143"],[],"import React, { useEffect, useState } from \"react\";\nimport { GetAllGoals, ListOfGoals } from \"../../ApiManager\";\nimport \"./FilterBy.css\"\n\nexport const FilterByWeek = () => {\n  const [goallist, setGoalList] = useState([]);\n\n  useEffect(() => {\n    ListOfGoals().then((data) => {\n      setGoalList(data);\n      // console.log(data)\n    });\n  }, []);\n\n  let date = new Date()\n  date.setDate(date.getDate() + 7) \n  \n  return (\n    <>\n      <div key=\"filter-week\">\n          {<h4 className=\"title\">This weeks goals</h4>}\n        {\n          (goallist.filter((goal) => {\n              const goalDate = new Date(goal.goalDate)\n              const isInRange = goalDate <= date\n              return isInRange\n            })\n            .map((filteredGoal) => (\n              <div style={{whiteSpace: 'pre-line'}} className=\"goal\" key={filteredGoal.id}>\n               <p className=\"goal\">\n               {filteredGoal.goalDescription}{filteredGoal.goalDate}\n               </p>\n              </div>\n              \n            )))\n        }\n      </div>\n      {console.log()}\n    </>\n  );\n};\n\n//     const text = \"Complete tasks faster than ever before.\\n With our platform, it only takes minutes.\"\n//     return (\n//         <div style={{whiteSpace: \"pre-line\"}} >{text}</div>\n//     )\n// }","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/filteredGoals/FilterByMonth.js",[],[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/views/review/YearInReview.js",["144"],[],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getMilestones, ListOfGoals } from \"../../ApiManager\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport \"./YearInReview.css\";\n\nexport const YearInReview = () => {\n  const [goals, setGoalList] = useState([]);\n  const [milestones, setMilestone] = useState([]);\n\n  const getFilteredGoals = () => {\n    ListOfGoals().then((data) => {\n      setGoalList(\n        data.filter((item) => {\n          return item.userId === parseInt(localStorage.getItem(\"goal_keeper\"));\n        })\n      );\n    });\n  };\n\n  useEffect(() => {\n    getFilteredGoals();\n  }, []);\n\n  const getFilteredMilestones = () => {\n    getMilestones().then((data) => {\n      setMilestone(\n        data.filter((item) => {\n          return item.goalId === item.goal?.id;\n        })\n      );\n    });\n  };\n\n  useEffect(() => {\n    getFilteredMilestones();\n  }, []);\n\n  const deleteGoal = (id) => {\n    fetch(`http://localhost:8088/goals/${id}`, {\n      method: \"DELETE\",\n    })\n      .then(() => {\n        deleteMilestone(id);\n      })\n      // deleteMilestone called inside of the deleteGoal Delete fetch call to delete the ascociated milestone from the milstones array in the db.\n      .then(() => {\n        getFilteredGoals();\n      });\n  };\n\n  const deleteMilestone = (id) => {\n    fetch(`http://localhost:8088/milestones/${id}`, {\n      method: \"DELETE\",\n    });\n  };\n\n  const unixTime = (time) => {\n    const myDate = new Date(time);\n    const myDateString = `${\n      myDate.getDate() + 1\n    }/${myDate.getMonth()}/${myDate.getFullYear()}`;\n    return myDateString;\n  };\n\n  const milestoneChecker = (goalsId) =>\n    milestones.find((mileObj) => {\n      return (\n        mileObj.userId === parseInt(localStorage.getItem(\"goal_keeper\")) &&\n        mileObj.goalId === parseInt(goalsId)\n      );\n    });\n\n  return (\n    <>\n      {goals\n        .map((goalObj) => {\n          const currentMilestone = milestoneChecker(goalObj.id);\n\n          return (\n            <>\n              <div className=\"goal_list\" key={goalObj.id}>\n                <Container>\n                  <Row>\n                    <Col md={12}>\n                      {/* <Link\n                        className=\"goal_list\"\n                        style={{ background: `${goals.category?.color}` }}\n                        key={\"key2\"}\n                        to={`/goals/${goalObj.id}`}\n                      > */}\n                      Goal description: {goalObj.goalDescription}\n                      Goal objectives: {goalObj.goalObjective}\n                      Notes: {goalObj.goalNotes}\n                      Note updates: {goalObj.notes}\n                      Start Date: {unixTime(goalObj.goalDate)}\n                      {/* </Link> */}\n                      <button\n                        className=\"delete-btn\"\n                        key={\"key3\"}\n                        onClick={() => deleteGoal(goalObj.id)}\n                        // When clicked, it invokes the DELETE fetch call for deleteGoal and then invokes the DELETE fetch call for deleteMilestone.\n                      >\n                        DELETE\n                      </button>\n                    </Col>\n\n                    <Col className=\"parent-drop\">\n                      Goal Category:\n                      <button\n                        className=\"drop-btn-2\"\n                        style={{ background: `${goalObj.category?.color}` }}\n                      >\n                        {goalObj.category?.category}\n                      </button>\n                      Goal Priority:\n                      <button\n                        key={\"key5\"}\n                        className=\"drop-btn-2\"\n                        style={{ background: `${goalObj.priority?.color}` }}\n                      >\n                        {goalObj.priority?.priority}\n                      </button>\n                      Goal Term:\n                      <button\n                        key={\"key6\"}\n                        className=\"drop-btn-2\"\n                        style={{ background: `${goalObj.term?.color}` }}\n                      >\n                        {goalObj.term?.term}\n                      </button>\n                    </Col>\n                    {/* </Col> */}\n                    <div className=\"milestone-Container\">\n                      <Col className=\"milestones\">\n                        <label>Overall Direction</label>\n                        {currentMilestone ? (\n                          <input\n                            className=\"dirbx\"\n                            type=\"checkbox\"\n                            label=\"Overall Direction\"\n                            checked={currentMilestone.direction}\n                            disabled\n                          />\n                        ) : (\n                          <></>\n                        )}\n                      </Col>\n\n                      <Col className=\"milestones\">\n                        <label>Flushed And Difined</label>\n                        {currentMilestone ? (\n                          <input\n                            className=\"dirbx\"\n                            type=\"checkbox\"\n                            label=\"Overall Direction\"\n                            checked={currentMilestone.defined}\n                            disabled\n                          />\n                        ) : (\n                          <></>\n                        )}\n                      </Col>\n\n                      <Col className=\"milestones\">\n                        <label>Tangible Progress Made</label>\n                        {currentMilestone ? (\n                          <input\n                            className=\"dirbx\"\n                            type=\"checkbox\"\n                            label=\"Overall Direction\"\n                            checked={currentMilestone.progress}\n                            disabled\n                          />\n                        ) : (\n                          <></>\n                        )}\n                      </Col>\n\n                      <Col className=\"milestones\">\n                        <label>Features Completed</label>\n                        {currentMilestone ? (\n                          <input\n                            className=\"dirbx\"\n                            type=\"checkbox\"\n                            label=\"Overall Direction\"\n                            checked={currentMilestone.features}\n                            disabled\n                          />\n                        ) : (\n                          <></>\n                        )}\n                      </Col>\n\n                      <Col className=\"milestones\">\n                        <label>Goal Objective Attained</label>\n                        {currentMilestone ? (\n                          <input\n                            className=\"dirbx\"\n                            type=\"checkbox\"\n                            label=\"Overall Direction\"\n                            checked={currentMilestone.attained}\n                            disabled\n                          />\n                        ) : (\n                          <></>\n                        )}\n                      </Col>\n                    </div>\n                  </Row>\n                </Container>\n              </div>\n            </>\n          );\n        })\n        .reverse()}\n    </>\n  );\n};\n\n// <button\n//   key={\"key4\"}\n//   className=\"cat-btn\"\n//   style={{ background: `${goalObj.category?.color}` }}\n//   >\n//   {goalObj.category?.category}\n// hello\n// </button>\n\n// <button className=\"test-btn\">\n//   test\n// </button>\n","/Users/macbook/workspace/Goal_Keeper_App/src/components/views/notes/GoalNotes.js",[],[],"/Users/macbook/workspace/Goal_Keeper_App/src/components/Goalify.js",[],[],{"ruleId":"145","severity":1,"message":"146","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"149","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":14},{"ruleId":"145","severity":1,"message":"150","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},{"ruleId":"145","severity":1,"message":"151","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":13},{"ruleId":"145","severity":1,"message":"152","line":7,"column":3,"nodeType":"147","messageId":"148","endLine":7,"endColumn":7},{"ruleId":"145","severity":1,"message":"153","line":8,"column":3,"nodeType":"147","messageId":"148","endLine":8,"endColumn":14},{"ruleId":"145","severity":1,"message":"154","line":9,"column":3,"nodeType":"147","messageId":"148","endLine":9,"endColumn":9},{"ruleId":"145","severity":1,"message":"155","line":12,"column":10,"nodeType":"147","messageId":"148","endLine":12,"endColumn":17},{"ruleId":"145","severity":1,"message":"150","line":13,"column":10,"nodeType":"147","messageId":"148","endLine":13,"endColumn":14},{"ruleId":"145","severity":1,"message":"156","line":13,"column":16,"nodeType":"147","messageId":"148","endLine":13,"endColumn":26},{"ruleId":"145","severity":1,"message":"157","line":3,"column":21,"nodeType":"147","messageId":"148","endLine":3,"endColumn":24},{"ruleId":"145","severity":1,"message":"158","line":3,"column":26,"nodeType":"147","messageId":"148","endLine":3,"endColumn":29},{"ruleId":"145","severity":1,"message":"159","line":13,"column":10,"nodeType":"147","messageId":"148","endLine":13,"endColumn":16},{"ruleId":"145","severity":1,"message":"160","line":13,"column":18,"nodeType":"147","messageId":"148","endLine":13,"endColumn":27},{"ruleId":"145","severity":1,"message":"161","line":29,"column":17,"nodeType":"147","messageId":"148","endLine":29,"endColumn":25},{"ruleId":"145","severity":1,"message":"162","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":26},{"ruleId":"145","severity":1,"message":"146","line":1,"column":28,"nodeType":"147","messageId":"148","endLine":1,"endColumn":36},{"ruleId":"145","severity":1,"message":"163","line":1,"column":10,"nodeType":"147","messageId":"148","endLine":1,"endColumn":32},{"ruleId":"164","severity":1,"message":"165","line":71,"column":6,"nodeType":"166","endLine":71,"endColumn":8,"suggestions":"167"},{"ruleId":"164","severity":1,"message":"168","line":91,"column":5,"nodeType":"166","endLine":91,"endColumn":16,"suggestions":"169"},{"ruleId":"164","severity":1,"message":"170","line":17,"column":5,"nodeType":"166","endLine":17,"endColumn":7,"suggestions":"171"},{"ruleId":"145","severity":1,"message":"172","line":3,"column":31,"nodeType":"147","messageId":"148","endLine":3,"endColumn":38},{"ruleId":"145","severity":1,"message":"173","line":3,"column":40,"nodeType":"147","messageId":"148","endLine":3,"endColumn":53},{"ruleId":"145","severity":1,"message":"174","line":7,"column":10,"nodeType":"147","messageId":"148","endLine":7,"endColumn":14},{"ruleId":"145","severity":1,"message":"175","line":7,"column":16,"nodeType":"147","messageId":"148","endLine":7,"endColumn":23},{"ruleId":"145","severity":1,"message":"176","line":9,"column":9,"nodeType":"147","messageId":"148","endLine":9,"endColumn":16},{"ruleId":"164","severity":1,"message":"165","line":18,"column":5,"nodeType":"166","endLine":18,"endColumn":7,"suggestions":"177"},{"ruleId":"145","severity":1,"message":"178","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":21},{"ruleId":"145","severity":1,"message":"150","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":14},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Goal' is defined but never used.","'Link' is defined but never used.","'React' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'button' is defined but never used.","'getTips' is defined but never used.","'useHistory' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'userId' is assigned a value but never used.","'setUserId' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'useEffect' is defined but never used.","'getSpaceUntilMaxLength' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'goalsId'. Either include it or remove the dependency array.","ArrayExpression",["179"],"React Hook useEffect has a missing dependency: 'milestoneChecker'. Either include it or remove the dependency array.",["180"],"React Hook useEffect has a missing dependency: 'tipsId'. Either include it or remove the dependency array.",["181"],"'GetGoal' is defined but never used.","'getMilestones' is defined but never used.","'goal' is assigned a value but never used.","'setGoal' is assigned a value but never used.","'history' is assigned a value but never used.",["182"],"'GetAllGoals' is defined but never used.",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"183","fix":"189"},"Update the dependencies array to be: [goalsId]",{"range":"190","text":"191"},"Update the dependencies array to be: [milestone, milestoneChecker]",{"range":"192","text":"193"},"Update the dependencies array to be: [tipsId]",{"range":"194","text":"195"},{"range":"196","text":"191"},[2088,2090],"[goalsId]",[2543,2554],"[milestone, milestoneChecker]",[438,440],"[tipsId]",[521,523]]