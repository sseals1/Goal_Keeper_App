{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/workspace/Goal_Keeper_App/src/components/views/GoalForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GoalForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [goalDescription, setGoalDescription] = useState();\n  const [goalObjective, setGoalObjective] = useState();\n  const [goalNotes, setGoalNotes] = useState();\n  const [customerId, setCustomerId] = useState();\n  const [goalDate, setGoalDate] = useState();\n  const [newGoal, setGoals] = useState([]);\n\n  const submitGoal = captureEventToPreventDefaultBehavior => {\n    // This parameter \"captureEventToPreventDefault\" stops the default behavior of the\n    // browser which in this case is to Submit the goal. By preventing the default browser behavior\n    // the browser will display the other html.\n    captureEventToPreventDefaultBehavior.preventDefault(); // getting the customerId value from localStorage\n    //   const newGoal = \n\n    setGoals({\n      // the goal object being updated with values from the state variable \"goal\"\n      goalDescription,\n      goalObjective,\n      goalNotes,\n      goalDate: new Date(goalDate).getTime() + 84000000,\n      customerId: parseInt(localStorage.getItem(\"goal_keeper\")) // dot notation to create the value pairs on the new object keys\n\n    });\n    const fetchOption = {\n      // POST fetch call to send the new object to the API\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newGoal) // the body of the fetch object has to be converted to JSON string\n\n    };\n    return fetch(\"http://localhost:8088/goals\", fetchOption) // the fetchOption object is being sent to the url in the return fetch\n    .then(() => {\n      history.push(\"/goals\"); // Once the object is sent to the API, the user is then\n      // pushed/routed back to the /goals route that is\n      // specified as goalList in the ApplicationViews component\n    });\n  }; // useEffect(() => {\n  //     fetch(`http://localhost:8088/goals`)\n  //     .then(res => res.json())\n  //     .then((data) => {\n  //         setGoals(newGoal)\n  //     })\n  // }, []\n  // )\n\n\n  const formChecker = obj => {\n    if (newGoal.length < 4) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: submitGoal,\n        children: \"Submit Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ticketForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ticketForm__title\",\n      children: \"New Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Enter a new goal to start:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // The input tag holds all of the logic for capturing the\n          // user input for the description field\n          required: true,\n          autoFocus: true,\n          type: \"text\" // The code that tells what the form field will be (type=\"text\")\n          ,\n          className: \"form-control\",\n          placeholder: \"Brief description of your goal\" // The onChange event listener is used to capture the user input from the DOM\n          ,\n          onChange: event => {\n            setGoalDescription(event.target.value);\n            console.log(goalDescription);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Goal Objectives:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          autoFocus: true,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Brief description of goal objectives\",\n          onChange: event => {\n            setGoalObjective(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Goal Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          autoFocus: true,\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Enter goal progress observations\",\n          onChange: event => {\n            setGoalNotes(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Goal Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          autoFocus: true,\n          type: \"date\",\n          className: \"form-control\",\n          placeholder: \"\",\n          onChange: event => {\n            setGoalDate(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: formChecker(newGoal)\n    }, \"submit-btn\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GoalForm, \"+zhy+77PTfBnbfBRVnvhZt5DYUM=\", false, function () {\n  return [useHistory];\n});\n\n_c = GoalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalForm\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","GoalForm","history","goalDescription","setGoalDescription","goalObjective","setGoalObjective","goalNotes","setGoalNotes","customerId","setCustomerId","goalDate","setGoalDate","newGoal","setGoals","submitGoal","captureEventToPreventDefaultBehavior","preventDefault","Date","getTime","parseInt","localStorage","getItem","fetchOption","method","headers","body","JSON","stringify","fetch","then","push","formChecker","obj","length","event","target","value","console","log"],"sources":["/Users/macbook/workspace/Goal_Keeper_App/src/components/views/GoalForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const GoalForm = () => {\n  const history = useHistory();\n  const [goalDescription, setGoalDescription] = useState();\n  const [goalObjective, setGoalObjective] = useState();\n  const [goalNotes, setGoalNotes] = useState();\n  const [customerId, setCustomerId] = useState();\n  const [goalDate, setGoalDate] = useState()\n  const [newGoal, setGoals] = useState([])\n\n  const submitGoal = (captureEventToPreventDefaultBehavior) => {\n      // This parameter \"captureEventToPreventDefault\" stops the default behavior of the\n      // browser which in this case is to Submit the goal. By preventing the default browser behavior\n      // the browser will display the other html.\n      captureEventToPreventDefaultBehavior.preventDefault();\n      // getting the customerId value from localStorage\n\n\n    //   const newGoal = \n      setGoals({\n        // the goal object being updated with values from the state variable \"goal\"\n        goalDescription,\n        goalObjective,\n        goalNotes,\n        goalDate: new Date(goalDate).getTime() + 84000000,\n        customerId: parseInt(localStorage.getItem(\"goal_keeper\")),\n        \n        // dot notation to create the value pairs on the new object keys\n      })\n        \n        const fetchOption = {\n            // POST fetch call to send the new object to the API\n      method: \"POST\",\n      headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newGoal),\n        // the body of the fetch object has to be converted to JSON string\n    };\n    return (\n        fetch(\"http://localhost:8088/goals\", fetchOption)\n        // the fetchOption object is being sent to the url in the return fetch\n        .then(() => {\n            history.push(\"/goals\");\n            // Once the object is sent to the API, the user is then\n            // pushed/routed back to the /goals route that is\n            // specified as goalList in the ApplicationViews component\n        })\n        );\n    };\n    \n    // useEffect(() => {\n    //     fetch(`http://localhost:8088/goals`)\n    //     .then(res => res.json())\n    //     .then((data) => {\n    //         setGoals(newGoal)\n    //     })\n    // }, []\n    // )\n    \n    const formChecker = (obj) => {\n        if (newGoal.length < 4) {\n            return (\n                <button className=\"btn btn-primary\" onClick={submitGoal}>\n          Submit Ticket\n        </button>\n      );\n    }\n  };\n\n\n\n  return (\n    <form className=\"ticketForm\">\n      <h2 className=\"ticketForm__title\">New Goal</h2>\n      <fieldset>\n        <div className=\"form-group\">\n          <label htmlFor=\"description\">Enter a new goal to start:</label>\n          <input\n            // The input tag holds all of the logic for capturing the\n            // user input for the description field\n            required\n            autoFocus\n            type=\"text\"\n            // The code that tells what the form field will be (type=\"text\")\n            className=\"form-control\"\n            placeholder=\"Brief description of your goal\"\n            // The onChange event listener is used to capture the user input from the DOM\n            onChange={(event) => {\n              setGoalDescription(event.target.value);\n              console.log(goalDescription);\n            }}\n          />\n        </div>\n      </fieldset>\n      <fieldset>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Goal Objectives:</label>\n          <input\n            required\n            autoFocus\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Brief description of goal objectives\"\n            onChange={(event) => {\n              setGoalObjective(event.target.value);\n            }}\n          />\n        </div>\n      </fieldset>\n      <fieldset>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Goal Notes:</label>\n          <input\n            required\n            autoFocus\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Enter goal progress observations\"\n            onChange={(event) => {\n              setGoalNotes(event.target.value);\n            }}\n          />\n        </div>\n      </fieldset>\n      <fieldset>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Goal Start Date:</label>\n          <input\n            required\n            autoFocus\n            type=\"date\"\n            className=\"form-control\"\n            placeholder=\"\"\n            onChange={(event) => {\n              setGoalDate(event.target.value);\n            }}\n          />\n        </div>\n      </fieldset>\n      <div key={\"submit-btn\"} className=\"form-group\">\n        {formChecker(newGoal)}\n        {/* <button className=\"btn btn-primary\" onClick={submitGoal}> */}\n        {/* Invoking the submitTicket function which runs all of the code above */}\n        {/* creating the ticket and sending it to the API */}\n        {/* Submit Ticket */}\n        {/* </button> */}\n      </div>\n    </form>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}