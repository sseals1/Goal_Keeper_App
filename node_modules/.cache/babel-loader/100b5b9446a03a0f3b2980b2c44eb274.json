{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalForm/GoalForm.js\",\n    _s = $RefreshSig$();\n\n// import { getByLabelText } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoalCategory, GoalPriority, TimeFrame } from \"../../ApiManager\"; // import \"./GoalForm.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GoalForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [goalDescription, setGoalDescription] = useState(\"\");\n  const [goalObjective, setGoalObjective] = useState(\"\");\n  const [goalNotes, setGoalNotes] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [goalDate, setGoalDate] = useState(\"\");\n  const [newGoal, setGoals] = useState({});\n  const [categoryId, setGoalCategory] = useState(\"\"); //   goalCategory is the key on the new object that is being created coming from the event.target.value\n\n  const [category, setCategory] = useState([]); //   setCategory is setting state for the useEffect (bringing in categories)\n  // category is table in the the db\n\n  const [priorityId, setGoalPriority] = useState(\"\");\n  const [priority, setPriority] = useState([]);\n  const [termId, setGoalTimeFrame] = useState(\"\");\n  const [timeFrame, setTimeFrame] = useState([]);\n  const [notes, setNotes] = useState(\"\");\n\n  const submitGoal = captureEventToPreventDefaultBehavior => {\n    // This parameter \"captureEventToPreventDefault\" stops the default behavior of the\n    // browser which in this case is to Submit the goal. By preventing the default browser behavior\n    // the browser will display the other html.\n    captureEventToPreventDefaultBehavior.preventDefault(); // getting the userId value from localStorage\n\n    const goalObj = {\n      // the goal object being updated with values from the state variable \"goal\"\n      goalDescription,\n      goalObjective,\n      goalNotes,\n      goalDate,\n      userId: parseInt(localStorage.getItem(\"goal_keeper\")),\n      categoryId,\n      priorityId,\n      termId,\n      notes // dot notation to create the value pairs on the new object keys\n\n    };\n    setGoals(goalObj);\n    const fetchOption = {\n      // POST fetch call to send the new object to the API\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(goalObj) // the body of the fetch object has to be converted to JSON string\n\n    };\n    console.log(goalObj);\n    return fetch(\"http://localhost:8088/goals\", fetchOption) // the fetchOption object is being sent to the url in the return fetch\n    .then(() => {\n      history.push(\"/mygoals\"); // Once the object is sent to the API, the user is then\n      // pushed/routed back to the /goals route that is\n      // specified as goalList in the ApplicationViews component\n    });\n  };\n\n  const formChecker = newGoalObj => {\n    // const toggleButton = (newGoal) => {\n    const isEnabled = goalDescription.length > 0 && goalObjective.length > 0 && goalNotes.length > 0 && goalDate.length > 0; // const booleanCheck = isEnabled\n    // if (booleanCheck){\n    //   return submitGoal(booleanCheck)\n    // } else {\n    //   submitGoal(alert(\"test\"))\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-shift-right\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isEnabled,\n        className: \"track_goal-btn\" // onFocus={alert(\"test\")}\n        ,\n        onClick: submitGoal,\n        children: \"TRACK GOAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  };\n\n  useEffect(() => {\n    GoalCategory().then(data => {\n      setCategory(data);\n    });\n  }, []);\n  useEffect(() => {\n    GoalPriority().then(data => [setPriority(data)]);\n  }, []);\n  useEffect(() => {\n    TimeFrame().then(data => {\n      setTimeFrame(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"goalForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"goalForm__title\",\n      children: \"New Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Enter a new goal to start:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          // The input tag holds all of the logic for capturing the\n          // user input for the description field\n          required: true,\n          autoFocus: true,\n          type: \"textarea\" // The code that tells what the form field will be (type=\"text\")\n          ,\n          className: \"form-control\",\n          placeholder: \"Brief description of your goal\" // The onChange event listener is used to capture the user input from the DOM\n          ,\n          onChange: event => {\n            setGoalDescription(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Goal Objectives:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          autoFocus: true,\n          type: \"textarea\",\n          className: \"form-control\",\n          placeholder: \"Brief description of goal objectives\",\n          onChange: event => {\n            setGoalObjective(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this), \"// \", /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Goal Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          autoFocus: true,\n          type: \"textarea\",\n          className: \"form-control\",\n          placeholder: \"Enter goal progress observations\",\n          onChange: event => {\n            setGoalNotes(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Goal Start Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          autoFocus: true,\n          type: \"date\",\n          className: \"form-control\",\n          placeholder: \"\",\n          onChange: event => {\n            setGoalDate(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"goal-title\",\n      children: \"Select your goal options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => {\n            // select.options[select.selectedIndex].value;\n            // if ([event.target.selectedIndex] === event.categories. );\n            setGoalCategory(parseInt([event.target.selectedIndex]));\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"option-font\",\n            value: \"0\",\n            children: \"Select a category...\"\n          }, \"category\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), category.map(catObj => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              className: \"opdrop\",\n              children: catObj.category\n            }, catObj.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Priority level: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => {\n            setGoalPriority(parseInt([event.target.selectedIndex]));\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"option-font\",\n            value: \"0\",\n            children: \"Select a priority...\"\n          }, \"priority\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), priority.map(priorityObj => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              className: \"opdrop\",\n              children: priorityObj.priority\n            }, priorityObj.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Goal term: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: event => {\n            setGoalTimeFrame(parseInt([event.target.selectedIndex]));\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"option-font\",\n            value: \"0\",\n            children: \"Select a term...\"\n          }, \"location\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), timeFrame.map(data => {\n            return /*#__PURE__*/_jsxDEV(\"option\", {\n              className: \"opdrop\",\n              children: data.term\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: formChecker(newGoal)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this) // </Container>\n  ;\n};\n\n_s(GoalForm, \"cAk46a9OV9AhcKre0UrhrkNreMM=\", false, function () {\n  return [useHistory];\n});\n\n_c = GoalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalForm\");","map":{"version":3,"names":["React","useState","useEffect","Container","Col","Row","useHistory","GoalCategory","GoalPriority","TimeFrame","GoalForm","history","goalDescription","setGoalDescription","goalObjective","setGoalObjective","goalNotes","setGoalNotes","userId","setUserId","goalDate","setGoalDate","newGoal","setGoals","categoryId","setGoalCategory","category","setCategory","priorityId","setGoalPriority","priority","setPriority","termId","setGoalTimeFrame","timeFrame","setTimeFrame","notes","setNotes","submitGoal","captureEventToPreventDefaultBehavior","preventDefault","goalObj","parseInt","localStorage","getItem","fetchOption","method","headers","body","JSON","stringify","console","log","fetch","then","push","formChecker","newGoalObj","isEnabled","length","data","event","target","value","selectedIndex","map","catObj","id","priorityObj","term"],"sources":["/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalForm/GoalForm.js"],"sourcesContent":["// import { getByLabelText } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport { GoalCategory, GoalPriority, TimeFrame } from \"../../ApiManager\";\n// import \"./GoalForm.css\";\n\nexport const GoalForm = () => {\n  const history = useHistory();\n  const [goalDescription, setGoalDescription] = useState(\"\");\n  const [goalObjective, setGoalObjective] = useState(\"\");\n  const [goalNotes, setGoalNotes] = useState(\"\");\n  const [userId, setUserId] = useState(\"\");\n  const [goalDate, setGoalDate] = useState(\"\");\n  const [newGoal, setGoals] = useState({});\n\n  const [categoryId, setGoalCategory] = useState(\"\");\n  //   goalCategory is the key on the new object that is being created coming from the event.target.value\n  const [category, setCategory] = useState([]);\n  //   setCategory is setting state for the useEffect (bringing in categories)\n  // category is table in the the db\n\n  const [priorityId, setGoalPriority] = useState(\"\");\n  const [priority, setPriority] = useState([]);\n\n  const [termId, setGoalTimeFrame] = useState(\"\");\n  const [timeFrame, setTimeFrame] = useState([]);\n\n  const [notes, setNotes] = useState(\"\");\n\n  const submitGoal = (captureEventToPreventDefaultBehavior) => {\n    // This parameter \"captureEventToPreventDefault\" stops the default behavior of the\n    // browser which in this case is to Submit the goal. By preventing the default browser behavior\n    // the browser will display the other html.\n    captureEventToPreventDefaultBehavior.preventDefault();\n    // getting the userId value from localStorage\n\n    const goalObj = {\n      // the goal object being updated with values from the state variable \"goal\"\n      goalDescription,\n      goalObjective,\n      goalNotes,\n      goalDate,\n      userId: parseInt(localStorage.getItem(\"goal_keeper\")),\n      categoryId,\n      priorityId,\n      termId,\n      notes,\n\n      // dot notation to create the value pairs on the new object keys\n    };\n\n    setGoals(goalObj);\n\n    const fetchOption = {\n      // POST fetch call to send the new object to the API\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(goalObj),\n      // the body of the fetch object has to be converted to JSON string\n    };\n    console.log(goalObj);\n    return (\n      fetch(\"http://localhost:8088/goals\", fetchOption)\n        // the fetchOption object is being sent to the url in the return fetch\n        .then(() => {\n          history.push(\"/mygoals\");\n          // Once the object is sent to the API, the user is then\n          // pushed/routed back to the /goals route that is\n          // specified as goalList in the ApplicationViews component\n        })\n    );\n  };\n\n  const formChecker = (newGoalObj) => {\n    // const toggleButton = (newGoal) => {\n    const isEnabled =\n      goalDescription.length > 0 &&\n      goalObjective.length > 0 &&\n      goalNotes.length > 0 &&\n      goalDate.length > 0;\n\n    // const booleanCheck = isEnabled\n    // if (booleanCheck){\n    //   return submitGoal(booleanCheck)\n    // } else {\n    //   submitGoal(alert(\"test\"))\n    // }\n\n    return (\n      <div className=\"btn-shift-right\">\n        <button\n          disabled={!isEnabled}\n          className=\"track_goal-btn\"\n          // onFocus={alert(\"test\")}\n          onClick={submitGoal}\n        >\n          TRACK GOAL\n        </button>\n      </div>\n    );\n  };\n\n  useEffect(() => {\n    GoalCategory().then((data) => {\n      setCategory(data);\n    });\n  }, []);\n\n  useEffect(() => {\n    GoalPriority().then((data) => [setPriority(data)]);\n  }, []);\n\n  useEffect(() => {\n    TimeFrame().then((data) => {\n      setTimeFrame(data);\n    });\n  }, []);\n\n  return (\n    <form className=\"goalForm\">\n      <h4 className=\"goalForm__title\">New Goal</h4>\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Enter a new goal to start:</label>\n            <input\n              // The input tag holds all of the logic for capturing the\n              // user input for the description field\n              required\n              autoFocus\n              type=\"textarea\"\n              // The code that tells what the form field will be (type=\"text\")\n              className=\"form-control\"\n              placeholder=\"Brief description of your goal\"\n              // The onChange event listener is used to capture the user input from the DOM\n              onChange={(event) => {\n                setGoalDescription(event.target.value);\n              }}\n            />\n          </div>\n        </fieldset>\n      {/* </Container> */}\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Goal Objectives:</label>\n            <input\n              required\n              autoFocus\n              type=\"textarea\"\n              className=\"form-control\"\n              placeholder=\"Brief description of goal objectives\"\n              onChange={(event) => {\n                setGoalObjective(event.target.value);\n              }}\n            />\n          </div>\n        </fieldset>\n      // {/* // </Container> */}\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">Goal Notes:</label>\n            <input\n              required\n              autoFocus\n              type=\"textarea\"\n              className=\"form-control\"\n              placeholder=\"Enter goal progress observations\"\n              onChange={(event) => {\n                setGoalNotes(event.target.value);\n              }}\n            />\n          </div>\n        </fieldset>\n       {/* </Container> */}\n      {/* <Container> */}\n      <fieldset>\n        {/* <div className=\"form-date\"> */}\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Goal Start Date:</label>\n          <input\n            required\n            autoFocus\n            type=\"date\"\n            className=\"form-control\"\n            placeholder=\"\"\n            onChange={(event) => {\n              setGoalDate(event.target.value);\n            }}\n          />\n        </div>\n      </fieldset>\n      {/* </Container> */}\n      <h4 className=\"goal-title\">Select your goal options</h4>\n      {/* <Container> */}\n        <fieldset>\n          {/* <div className=\"drop-title\">Select your goal options</div> */}\n          <div className=\"form-group\">\n            {/* <div className=\"dropdown-group\"> */}\n            <label htmlFor=\"name\">Category:</label>\n            <select\n              onChange={(event) => {\n                // select.options[select.selectedIndex].value;\n                // if ([event.target.selectedIndex] === event.categories. );\n                setGoalCategory(parseInt([event.target.selectedIndex]));\n              }}\n            >\n              <option className=\"option-font\" value=\"0\" key=\"category\">\n                Select a category...\n              </option>\n              {category.map((catObj) => {\n                return (\n                  <option className=\"opdrop\" key={catObj.id}>\n                    {catObj.category}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </fieldset>\n       {/* </Container> */}\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            {/* <div className=\"dropdown-group\"> */}\n            <label htmlFor=\"name\">Priority level: </label>\n            <select\n              onChange={(event) => {\n                setGoalPriority(parseInt([event.target.selectedIndex]));\n              }}\n            >\n              <option className=\"option-font\" value=\"0\" key=\"priority\">\n                Select a priority...\n              </option>\n\n              {priority.map((priorityObj) => {\n                return (\n                  <option className=\"opdrop\" key={priorityObj.id}>\n                    {priorityObj.priority}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </fieldset>\n      {/* </Container> */}\n      {/* <Container> */}\n        <fieldset>\n          <div className=\"form-group\">\n            {/* <div className=\"dropdown-group\"> */}\n            <label htmlFor=\"name\">Goal term: </label>\n            <select\n              onChange={(event) => {\n                setGoalTimeFrame(parseInt([event.target.selectedIndex]));\n              }}\n            >\n              <option className=\"option-font\" value=\"0\" key=\"location\">\n                Select a term...\n              </option>\n\n              {timeFrame.map((data) => {\n                return (\n                  <option className=\"opdrop\" key={data.id}>\n                    {data.term}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        </fieldset>\n      {/* </Container> */}\n      <div className=\"form-group\">\n        {/* <div className=\"form-group\"> */}\n        {formChecker(newGoal)}\n        {/* {toggleButton(newGoal)} */}\n        {/* invoking the function responsible for disableing the submit button untill all \n        form boxes have been filled.\n        */}\n      </div>\n    </form>\n    // </Container>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}