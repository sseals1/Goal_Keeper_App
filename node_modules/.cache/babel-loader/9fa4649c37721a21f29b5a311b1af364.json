{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/workspace/Goal_Keeper_App/src/components/views/milestone/MileFilled.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getFilledMilestones, getGoal, getMilestones } from '../../ApiManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MileFilled = () => {\n  _s();\n\n  const {\n    goalsId\n  } = useParams();\n  const [goal, setGoal] = useState({});\n  const [milestone, setMilestone] = useState({});\n  const history = useHistory();\n  console.log(milestone);\n  useEffect(() => {\n    getFilledMilestones(goalsId).then(data => {\n      setMilestone(data);\n    });\n  }, []);\n  const theMilestone = milestone.find(mileObj => {\n    return mileObj.userId === parseInt(localStorage.getItem(\"goal_keeper\")) && mileObj.goalId === parseInt(goalsId);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(MileFilled, \"rvigiwtZX+0TrHsg8+lDhOg4Ytk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = MileFilled;\n\nvar _c;\n\n$RefreshReg$(_c, \"MileFilled\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useHistory","getFilledMilestones","getGoal","getMilestones","MileFilled","goalsId","goal","setGoal","milestone","setMilestone","history","console","log","then","data","theMilestone","find","mileObj","userId","parseInt","localStorage","getItem","goalId"],"sources":["/Users/macbook/workspace/Goal_Keeper_App/src/components/views/milestone/MileFilled.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { getFilledMilestones, getGoal, getMilestones } from '../../ApiManager'\n \nexport const MileFilled = () => {\n    const {goalsId} = useParams()\n    const [goal, setGoal] = useState({})\n    const [milestone, setMilestone] = useState({})\n    const history = useHistory()\n\n    \n\n    console.log(milestone)\n\n    useEffect(() => {\n        getFilledMilestones(goalsId)\n        .then((data) => {\n            setMilestone(data)\n        })\n    },[])\n\n    \n        const theMilestone = milestone.find((mileObj) => {\n          return (\n            mileObj.userId === parseInt(localStorage.getItem(\"goal_keeper\")) &&\n            mileObj.goalId === parseInt(goalsId)\n          );\n        })\n\n\n      return (\n            <>\n            <h1>\n                 This text\n                {/* {goal.goalDescription} */}\n                {/* {theMilestone.direction}\n                {theMilestone.defined}\n                {theMilestone.progress}\n                {theMilestone.features}\n                {theMilestone.attained} */}\n                </h1>\n            \n            </>\n      )\n   \n}\n\n\n  \n\n\n    \n\n "],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,mBAAT,EAA8BC,OAA9B,EAAuCC,aAAvC,QAA4D,kBAA5D;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAC5B,MAAM;IAACC;EAAD,IAAYN,SAAS,EAA3B;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAMY,OAAO,GAAGV,UAAU,EAA1B;EAIAW,OAAO,CAACC,GAAR,CAAYJ,SAAZ;EAEAX,SAAS,CAAC,MAAM;IACZI,mBAAmB,CAACI,OAAD,CAAnB,CACCQ,IADD,CACOC,IAAD,IAAU;MACZL,YAAY,CAACK,IAAD,CAAZ;IACH,CAHD;EAIH,CALQ,EAKP,EALO,CAAT;EAQI,MAAMC,YAAY,GAAGP,SAAS,CAACQ,IAAV,CAAgBC,OAAD,IAAa;IAC/C,OACEA,OAAO,CAACC,MAAR,KAAmBC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAA3B,IACAJ,OAAO,CAACK,MAAR,KAAmBH,QAAQ,CAACd,OAAD,CAF7B;EAID,CALoB,CAArB;EAQF,oBACM;IAAA,uBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADA,iBADN;AAeL,CAzCM;;GAAMD,U;UACSL,S,EAGFC,U;;;KAJPI,U"},"metadata":{},"sourceType":"module"}