{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalist/GoalList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getCategories, ListOfGoals } from \"../../ApiManager\";\nimport \"./GoalList.css\"; // import { format } from 'date-fns'\n\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GoalList = () => {\n  _s();\n\n  const [goallist, setGoalList] = useState([]);\n  const {\n    goalsId\n  } = useParams();\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    getCategories().then(data => {\n      setCategories(data);\n    });\n  }, []);\n  useEffect(() => {\n    ListOfGoals().then(data => {\n      setGoalList(data);\n    });\n  }, []);\n\n  const unixTime = time => {\n    const myDate = new Date(time);\n    const myDateString = `${myDate.getDate() + 1}/${myDate.getMonth()}/${myDate.getFullYear()}`;\n    return myDateString;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"title-myGoals\",\n      children: \"My Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), goallist.map(goal => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"goal_list\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            md: 1,\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              md: 12,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/goals/${goal.id}`,\n                children: [\"Goal description: \", goal.goalDescription, \"Goal objectives: \", goal.goalObjective, \"Notes: \", goal.goalNotes, \"Start Date: \", unixTime(goal.goalDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), categories.map(catObj => {\n                if (catObj.id === goal.categoryId) {\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"category\",\n                    children: catObj.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 29\n                  }, this);\n                }\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, goal.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(GoalList, \"ZZOK0y4I15HhZWXFCqyuOEtczh0=\", false, function () {\n  return [useParams];\n});\n\n_c = GoalList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoalList\");","map":{"version":3,"names":["React","useState","useEffect","getCategories","ListOfGoals","Link","useParams","Col","Container","Row","GoalList","goallist","setGoalList","goalsId","categories","setCategories","then","data","unixTime","time","myDate","Date","myDateString","getDate","getMonth","getFullYear","map","goal","id","goalDescription","goalObjective","goalNotes","goalDate","catObj","categoryId","category"],"sources":["/Users/macbook/workspace/Goal_Keeper_App/src/components/views/goalist/GoalList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getCategories, ListOfGoals } from \"../../ApiManager\";\nimport \"./GoalList.css\";\n// import { format } from 'date-fns'\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nexport const GoalList = () => {\n  const [goallist, setGoalList] = useState([]);\n  const { goalsId } = useParams();\n  const [ categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    getCategories()\n    .then((data) => {\n      setCategories(data)\n    })\n  },[])\n\n  useEffect(() => {\n    ListOfGoals()\n    .then((data) => {\n      setGoalList(data);\n    });\n  }, []);\n\n  const unixTime = (time) => {\n    const myDate = new Date(time);\n    const myDateString = `${\n      myDate.getDate() + 1\n    }/${myDate.getMonth()}/${myDate.getFullYear()}`;\n    return myDateString;\n  };\n\n  return (\n    <>\n      <h4 className=\"title-myGoals\">My Goals</h4>\n\n      {goallist.map((goal) => {\n        return (\n          <div key={goal.id} className=\"goal_list\">\n            {/* <p className=\"goals\"> */}\n              <Container>\n                <Row md={1} >\n                  <Col md={12}>\n                    <Link to={`/goals/${goal.id}`}>\n                      Goal description: {goal.goalDescription}\n                      Goal objectives: {goal.goalObjective}\n                      Notes: {goal.goalNotes}\n                      Start Date: {unixTime(goal.goalDate)}\n                \n                  \n                    \n                    </Link>\n                  {\n                    categories.map((catObj) => {\n                      if (catObj.id === goal.categoryId) {\n                          return (\n                            <button className=\"category\">\n                              {catObj.category}\n                            </button>\n                            )\n                        }\n                    })\n                  }\n                  </Col>\n                </Row>\n              </Container>\n            {/* </p> */}\n          </div>\n        );\n      })}\n    </>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,kBAA3C;AACA,OAAO,gBAAP,C,CACA;;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM;IAAEY;EAAF,IAAcP,SAAS,EAA7B;EACA,MAAM,CAAEQ,UAAF,EAAcC,aAAd,IAA+Bd,QAAQ,CAAC,EAAD,CAA7C;EAEAC,SAAS,CAAC,MAAM;IACdC,aAAa,GACZa,IADD,CACOC,IAAD,IAAU;MACdF,aAAa,CAACE,IAAD,CAAb;IACD,CAHD;EAID,CALQ,EAKP,EALO,CAAT;EAOAf,SAAS,CAAC,MAAM;IACdE,WAAW,GACVY,IADD,CACOC,IAAD,IAAU;MACdL,WAAW,CAACK,IAAD,CAAX;IACD,CAHD;EAID,CALQ,EAKN,EALM,CAAT;;EAOA,MAAMC,QAAQ,GAAIC,IAAD,IAAU;IACzB,MAAMC,MAAM,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAf;IACA,MAAMG,YAAY,GAAI,GACpBF,MAAM,CAACG,OAAP,KAAmB,CACpB,IAAGH,MAAM,CAACI,QAAP,EAAkB,IAAGJ,MAAM,CAACK,WAAP,EAAqB,EAF9C;IAGA,OAAOH,YAAP;EACD,CAND;;EAQA,oBACE;IAAA,wBACE;MAAI,SAAS,EAAC,eAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAGGX,QAAQ,CAACe,GAAT,CAAcC,IAAD,IAAU;MACtB,oBACE;QAAmB,SAAS,EAAC,WAA7B;QAAA,uBAEI,QAAC,SAAD;UAAA,uBACE,QAAC,GAAD;YAAK,EAAE,EAAE,CAAT;YAAA,uBACE,QAAC,GAAD;cAAK,EAAE,EAAE,EAAT;cAAA,wBACE,QAAC,IAAD;gBAAM,EAAE,EAAG,UAASA,IAAI,CAACC,EAAG,EAA5B;gBAAA,iCACqBD,IAAI,CAACE,eAD1B,uBAEoBF,IAAI,CAACG,aAFzB,aAGUH,IAAI,CAACI,SAHf,kBAIeb,QAAQ,CAACS,IAAI,CAACK,QAAN,CAJvB;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QADF,EAWElB,UAAU,CAACY,GAAX,CAAgBO,MAAD,IAAY;gBACzB,IAAIA,MAAM,CAACL,EAAP,KAAcD,IAAI,CAACO,UAAvB,EAAmC;kBAC/B,oBACE;oBAAQ,SAAS,EAAC,UAAlB;oBAAA,UACGD,MAAM,CAACE;kBADV;oBAAA;oBAAA;oBAAA;kBAAA,QADF;gBAKD;cACJ,CARD,CAXF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MAFJ,GAAUR,IAAI,CAACC,EAAf;QAAA;QAAA;QAAA;MAAA,QADF;IAgCD,CAjCA,CAHH;EAAA,gBADF;AAwCD,CAnEM;;GAAMlB,Q;UAESJ,S;;;KAFTI,Q"},"metadata":{},"sourceType":"module"}