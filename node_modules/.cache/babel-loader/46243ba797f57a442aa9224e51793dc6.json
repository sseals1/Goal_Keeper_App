{"ast":null,"code":"import compareAsc from \"../compareAsc/index.js\";\nimport differenceInYears from \"../differenceInYears/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInDays from \"../differenceInDays/index.js\";\nimport differenceInHours from \"../differenceInHours/index.js\";\nimport differenceInMinutes from \"../differenceInMinutes/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport sub from \"../sub/index.js\";\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @param {Interval} interval - the interval to convert to duration\n *\n * @returns {Duration} The duration Object\n * @throws {TypeError} Requires 2 arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\nexport default function intervalToDuration(_ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(1, arguments);\n  var dateLeft = toDate(start);\n  var dateRight = toDate(end);\n\n  if (!isValid(dateLeft)) {\n    throw new RangeError('Start Date is invalid');\n  }\n\n  if (!isValid(dateRight)) {\n    throw new RangeError('End Date is invalid');\n  }\n\n  var duration = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  var sign = compareAsc(dateLeft, dateRight);\n  duration.years = Math.abs(differenceInYears(dateLeft, dateRight));\n  var remainingMonths = sub(dateLeft, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(remainingMonths, dateRight));\n  var remainingDays = sub(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(remainingDays, dateRight));\n  var remainingHours = sub(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(remainingHours, dateRight));\n  var remainingMinutes = sub(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(remainingMinutes, dateRight));\n  var remainingSeconds = sub(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(remainingSeconds, dateRight));\n  return duration;\n}","map":{"version":3,"names":["compareAsc","differenceInYears","differenceInMonths","differenceInDays","differenceInHours","differenceInMinutes","differenceInSeconds","isValid","requiredArgs","toDate","sub","intervalToDuration","_ref","start","end","arguments","dateLeft","dateRight","RangeError","duration","years","months","days","hours","minutes","seconds","sign","Math","abs","remainingMonths","remainingDays","remainingHours","remainingMinutes","remainingSeconds"],"sources":["/Users/macbook/workspace/Goal_Keeper_App/node_modules/date-fns/esm/intervalToDuration/index.js"],"sourcesContent":["import compareAsc from \"../compareAsc/index.js\";\nimport differenceInYears from \"../differenceInYears/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInDays from \"../differenceInDays/index.js\";\nimport differenceInHours from \"../differenceInHours/index.js\";\nimport differenceInMinutes from \"../differenceInMinutes/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport isValid from \"../isValid/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport sub from \"../sub/index.js\";\n/**\n * @name intervalToDuration\n * @category Common Helpers\n * @summary Convert interval to duration\n *\n * @description\n * Convert a interval object to a duration object.\n *\n * @param {Interval} interval - the interval to convert to duration\n *\n * @returns {Duration} The duration Object\n * @throws {TypeError} Requires 2 arguments\n * @throws {RangeError} `start` must not be Invalid Date\n * @throws {RangeError} `end` must not be Invalid Date\n *\n * @example\n * // Get the duration between January 15, 1929 and April 4, 1968.\n * intervalToDuration({\n *   start: new Date(1929, 0, 15, 12, 0, 0),\n *   end: new Date(1968, 3, 4, 19, 5, 0)\n * })\n * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }\n */\n\nexport default function intervalToDuration(_ref) {\n  var start = _ref.start,\n      end = _ref.end;\n  requiredArgs(1, arguments);\n  var dateLeft = toDate(start);\n  var dateRight = toDate(end);\n\n  if (!isValid(dateLeft)) {\n    throw new RangeError('Start Date is invalid');\n  }\n\n  if (!isValid(dateRight)) {\n    throw new RangeError('End Date is invalid');\n  }\n\n  var duration = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  };\n  var sign = compareAsc(dateLeft, dateRight);\n  duration.years = Math.abs(differenceInYears(dateLeft, dateRight));\n  var remainingMonths = sub(dateLeft, {\n    years: sign * duration.years\n  });\n  duration.months = Math.abs(differenceInMonths(remainingMonths, dateRight));\n  var remainingDays = sub(remainingMonths, {\n    months: sign * duration.months\n  });\n  duration.days = Math.abs(differenceInDays(remainingDays, dateRight));\n  var remainingHours = sub(remainingDays, {\n    days: sign * duration.days\n  });\n  duration.hours = Math.abs(differenceInHours(remainingHours, dateRight));\n  var remainingMinutes = sub(remainingHours, {\n    hours: sign * duration.hours\n  });\n  duration.minutes = Math.abs(differenceInMinutes(remainingMinutes, dateRight));\n  var remainingSeconds = sub(remainingMinutes, {\n    minutes: sign * duration.minutes\n  });\n  duration.seconds = Math.abs(differenceInSeconds(remainingSeconds, dateRight));\n  return duration;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}